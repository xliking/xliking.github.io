{"singlePage": [], "startSite": "", "filingNum": "", "onePageListNum": 15, "commentLabelColor": "#006b75", "yearColorList": ["#bc4c00", "#0969da", "#1f883d", "#A333D0"], "i18n": "CN", "themeMode": "manual", "dayTheme": "light", "nightTheme": "dark", "urlMode": "pinyin", "script": "", "style": "", "indexScript": "", "indexStyle": "", "bottomText": "", "showPostSource": 1, "iconList": {}, "UTC": 8, "rssSplit": "sentence", "exlink": {}, "title": "\u6728\u6c60", "subTitle": "JAVA\u65e5\u5e38\u7b14\u8bb0", "avatarUrl": "https://xlike.email/images/tx.jpg", "GMEEK_VERSION": "last", "postListJson": {"P2": {"htmlDir": "docs/post/SpingBoot-shi-xian-zhu-jie-dao-chu-Excel-wen-jian.html", "labels": ["documentation"], "postTitle": "SpingBoot\u5b9e\u73b0\u6ce8\u89e3\u5bfc\u51faExcel\u6587\u4ef6", "postUrl": "post/SpingBoot-shi-xian-zhu-jie-dao-chu-Excel-wen-jian.html", "postSourceUrl": "https://github.com/xliking/xliking.github.io/issues/2", "commentNum": 0, "wordCount": 6749, "description": "**\u7b2c\u4e00\u6b65\uff0c\u5bfc\u5165poi\u7684Maven\u4f9d\u8d56**\r\n```\r\n        <dependency>\r\n            <groupId>org.apache.poi</groupId>\r\n            <artifactId>poi-ooxml</artifactId>\r\n            <version>5.2.3</version>\r\n        </dependency>\r\n```\r\n**\u7b2c\u4e8c\u6b65\uff0c\u5b9e\u73b0\u81ea\u5b9a\u4e49\u6ce8\u89e3**\r\n\r\n```\r\n@Retention(RetentionPolicy.RUNTIME)\r\n@Target(ElementType.FIELD)\r\npublic @interface ExcelColumn {\r\n    String value() default '';\r\n\r\n}\r\n```\r\n**\u7b2c\u4e09\u6b65\uff0c\u7f16\u5199\u5bfc\u51fa\u7684\u5de5\u5177\u7c7b**\r\n\r\n```\r\n\r\n/**\r\n * \u7c7b\u4e0a\u9762\u7684\u5b57\u6bb5 -> \u52a0\u4e0a  @ExcelColumn('\u8868\u5934') \u7684\u6ce8\u89e3\r\n * @author \u6728\u6c60\r\n */\r\n@Slf4j\r\npublic class ExcelUtil {\r\n\r\n    public static <T> void write(List<T> objectList, OutputStream fileOut) {\r\n\r\n        Workbook workbook = new XSSFWorkbook();\r\n        try {\r\n            Sheet sheet = workbook.createSheet('Sheet1');\r\n            createHeader(sheet, objectList.get(0).getClass());\r\n            createRows(sheet, objectList);\r\n            workbook.write(fileOut);\r\n        } catch (IOException e) {\r\n            log.error('Error writing to Excel file: {}', e.getMessage());\r\n        } finally {\r\n            try {\r\n                fileOut.close();\r\n                workbook.close();\r\n            } catch (IOException e) {\r\n                throw new RuntimeException(e);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * \u5199\u5165Excel\u6587\u4ef6 Sheet1 \u4e2d\r\n     * @param objectList \u5b58\u50a8\u5bf9\u8c61\u7684\u96c6\u5408\r\n     * @param filePath \u6587\u4ef6\u8def\u5f84 \u4e3a\u7a7a \u5219\u662f\u684c\u9762\u8def\u5f84\r\n     * @return \u6587\u4ef6\u8def\u5f84\r\n     * @param <T> \u6cdb\u578b\r\n     */\r\n    public static <T> String writeToExcel(List<T> objectList, String filePath) {\r\n        if (filePath == null || filePath.isEmpty()) {\r\n            filePath = getDefaultDesktopPath() + '\\\\' + objectList.get(0).getClass().getSimpleName() + '.xlsx';\r\n        }\r\n        byte[] utf8Bytes = filePath.getBytes(StandardCharsets.UTF_8);\r\n        String newFileName = new String(utf8Bytes, StandardCharsets.UTF_8);\r\n        try (Workbook workbook = new XSSFWorkbook(); FileOutputStream fileOut = new FileOutputStream(newFileName)) {\r\n            Sheet sheet = workbook.createSheet('Sheet1');\r\n            Font font = getFont(sheet);\r\n            createHeader(sheet, objectList.get(0).getClass(), font);\r\n            createRows(sheet, objectList);\r\n//            autoSizeColumns(sheet);\r\n            workbook.write(fileOut);\r\n        } catch (IOException e) {\r\n            log.error('Error writing to Excel file: {}', e.getMessage());\r\n        }\r\n        return newFileName;\r\n    }\r\n\r\n    /**\r\n     * \u521b\u5efa\u8868\u5934\r\n     * @param sheet \u8868\u5355\u5bf9\u8c61\r\n     * @param clazz \u7c7b\u5bf9\u8c61\r\n     * @param <T> \u6cdb\u578b\r\n     */\r\n    private static <T> void createHeader(Sheet sheet, Class<T> clazz) {\r\n        createHeader(sheet, clazz, null);\r\n    }\r\n\r\n    private static <T> void createHeader(Sheet sheet, Class<T> clazz, Font headerFont) {\r\n\r\n        CellStyle headerCellStyle = sheet.getWorkbook().createCellStyle();\r\n        if (null != headerFont) {\r\n            headerCellStyle.setFont(headerFont);\r\n        }\r\n\r\n        Row headerRow = sheet.createRow(0);\r\n        List<String> propertyNames = new ArrayList<>();\r\n        for (Field field : clazz.getDeclaredFields()) {\r\n            ExcelColumn excelColumnAnnotation = field.getAnnotation(ExcelColumn.class);\r\n            if (excelColumnAnnotation != null) {\r\n                propertyNames.add(excelColumnAnnotation.value());\r\n            }\r\n        }\r\n        int cellNum = 0;\r\n        for (String propertyName : propertyNames) {\r\n            Cell headerCell = headerRow.createCell(cellNum++);\r\n            headerCell.setCellValue(propertyName);\r\n            headerCell.setCellStyle(headerCellStyle);\r\n        }\r\n    }\r\n\r\n    private static @NotNull Font getFont(Sheet sheet) {\r\n        Font headerFont = sheet.getWorkbook().createFont();\r\n        headerFont.setBold(true);\r\n        headerFont.setFontHeightInPoints((short) 14);\r\n        return headerFont;\r\n    }\r\n\r\n    /**\r\n     * \u521b\u5efa\u6bcf\u884c\u7684\u6570\u636e\r\n     * @param sheet \u8868\u5355\r\n     * @param objectList \u5bf9\u8c61\u96c6\u5408\r\n     * @param <T> \u6cdb\u578b\r\n     */\r\n    private static <T> void createRows(Sheet sheet, List<T> objectList) {\r\n        int rowNum = 1;\r\n        for (T object : objectList) {\r\n            Row row = sheet.createRow(rowNum++);\r\n            int cellNum = 0;\r\n            for (Field field : object.getClass().getDeclaredFields()) {\r\n                ExcelColumn excelColumnAnnotation = field.getAnnotation(ExcelColumn.class);\r\n                if (excelColumnAnnotation != null) {\r\n                    field.setAccessible(true);\r\n                    try {\r\n                        Object value = field.get(object);\r\n                        Cell cell = row.createCell(cellNum++);\r\n                        if (value != null) {\r\n                            if (value instanceof String) {\r\n                                cell.setCellValue((String) value);\r\n                            } else if (value instanceof Number) {\r\n                                cell.setCellValue(((Number) value).doubleValue());\r\n                            } else if (value instanceof Boolean) {\r\n                                cell.setCellValue((Boolean) value);\r\n                            } else {\r\n                                cell.setCellValue(value.toString());\r\n                            }\r\n                        } else {\r\n                            cell.setCellValue('');\r\n                        }\r\n                    } catch (IllegalAccessException e) {\r\n                        log.error('Error accessing field: {}', e.getMessage());\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private static void autoSizeColumns(Sheet sheet) {\r\n        for (int i = 0; i < sheet.getRow(0).getLastCellNum(); i++) {\r\n            sheet.autoSizeColumn(i);\r\n        }\r\n    }\r\n\r\n    private static String getDefaultDesktopPath() {\r\n        return System.getProperty('user.home') + '\\\\Desktop';\r\n    }\r\n\r\n    /**\r\n     *  kimi \u4e0d\u80fd\u8d85\u8fc7 131072 \u5b57\u6570\r\n     * \u8ba1\u7b97Excel\u6587\u4ef6\u4e2d\u7684\u5b57\u6570,\u53ea\u9002\u5408 Excel\u6587\u4ef6\u683c\u5f0f,\u4e0d\u5305\u542b\u7a7a\u683c \u548c \u7279\u6b8a\u7b26\u53f7\r\n     * @param filePath \u6587\u4ef6\u8def\u5f84\r\n     * @return \u5b57\u6570\r\n     */\r\n    public static int getWordCount(String filePath) {\r\n        Path excelPath = Paths.get(filePath);\r\n        try (InputStream fis = Files.newInputStream(excelPath);\r\n             Workbook workbook = new XSSFWorkbook(fis)) {\r\n            int wordCount = 0;\r\n            for (Sheet sheet : workbook) {\r\n                for (Row row : sheet) {\r\n                    for (Cell cell : row) {\r\n                        if (cell.getCellType() == CellType.STRING) {\r\n                            String cellValue = cell.getStringCellValue();\r\n                            if (cellValue != null) {\r\n                                wordCount += cellValue.length();\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            return wordCount;\r\n        } catch (IOException e) {\r\n            return 0;\r\n        }\r\n    }\r\n\r\n}\r\n\r\n```\u3002", "top": 0, "createdAt": 1719487846, "style": "", "script": "", "ogImage": "https://xlike.email/images/tx.jpg", "createdDate": "2024-06-27", "dateLabelColor": "#bc4c00"}, "P3": {"htmlDir": "docs/post/SpingBoot-ru-he-huo-qu-dang-qian-lu-jing.html", "labels": ["documentation"], "postTitle": "SpingBoot\u5982\u4f55\u83b7\u53d6\u5f53\u524d\u8def\u5f84", "postUrl": "post/SpingBoot-ru-he-huo-qu-dang-qian-lu-jing.html", "postSourceUrl": "https://github.com/xliking/xliking.github.io/issues/3", "commentNum": 0, "wordCount": 326, "description": "**\u7b2c\u4e00**\r\n`  String path = System.getProperty('user.dir')+'upload/';`\r\n**\u7b2c\u4e8c**\r\n```\r\n  \u5176\u4e2d servletContext \u9700\u8981\u6ce8\u5165\r\n  private final ServletContext servletContext;\r\n\r\n  String path = servletContext.getRealPath('upload/');\r\n```\r\n**\u603b\u7ed3**\r\n\u7b2c\u4e00\u79cd\u65b9\u6cd5\u66f4\u9002\u5408\u72ec\u7acb\u7684Java\u5e94\u7528\u7a0b\u5e8f\uff0c\u4e0d\u4f9d\u8d56Web\u5bb9\u5668\u3002", "top": 0, "createdAt": 1719560140, "style": "", "script": "", "ogImage": "https://xlike.email/images/tx.jpg", "createdDate": "2024-06-28", "dateLabelColor": "#bc4c00"}, "P4": {"htmlDir": "docs/post/SpingBoot-ji-cheng-xxl-job.html", "labels": ["documentation"], "postTitle": "SpingBoot\u96c6\u6210xxl-job", "postUrl": "post/SpingBoot-ji-cheng-xxl-job.html", "postSourceUrl": "https://github.com/xliking/xliking.github.io/issues/4", "commentNum": 0, "wordCount": 2079, "description": "**\u7b2c\u4e00\u6b65**\r\nxxl-job\uff0c\u6709\u5355\u72ec\u7684\u6570\u636e\u5e93\uff0c\u628a\u5bf9\u5e94\u7684\u8868\u5bfc\u5165\u8fdb\u53bb\r\n**\u7b2c\u4e8c\u6b65**\r\n\u7f16\u5199springboot\u4e2d\u7684\u914d\u7f6e\u6587\u4ef6\r\n```\r\nxxl:\r\n  enable: true  # \u662f\u5426\u542f\u7528 XXL-JOB\uff0ctrue \u8868\u793a\u542f\u7528\uff0cfalse \u8868\u793a\u7981\u7528\r\n  job:\r\n    admin:\r\n      addresses: http://xxl-job-xxx:8080/xxl-job-admin/  # XXL-JOB \u7ba1\u7406\u4e2d\u5fc3\u7684\u5730\u5740\uff0c\u7528\u4e8e\u4efb\u52a1\u7684\u7ba1\u7406\u548c\u8c03\u5ea6\r\n    executor:\r\n      app-name: financial-data-center  # \u6267\u884c\u5668\u7684\u5e94\u7528\u540d\u79f0\uff0c\u7528\u4e8e\u6807\u8bc6\u5177\u4f53\u7684\u6267\u884c\u5668\r\n      access-token: xxxxxx  # \u8bbf\u95ee\u4ee4\u724c\uff0c\u7528\u4e8e\u6267\u884c\u5668\u4e0e\u8c03\u5ea6\u4e2d\u5fc3\u4e4b\u95f4\u7684\u8eab\u4efd\u8ba4\u8bc1\r\n      log-path: ./logs/xxlJob  # \u6267\u884c\u5668\u65e5\u5fd7\u7684\u5b58\u50a8\u8def\u5f84\uff0c\u76f8\u5bf9\u4e8e\u5f53\u524d\u5de5\u4f5c\u76ee\u5f55\r\n      log-retention-days: 7  # \u65e5\u5fd7\u7684\u4fdd\u7559\u5929\u6570\uff0c\u8d85\u8fc7\u8fd9\u4e2a\u5929\u6570\u7684\u65e5\u5fd7\u5c06\u88ab\u81ea\u52a8\u6e05\u7406\r\n```\r\n**\u7b2c\u4e09\u6b65**\r\n\u7f16\u5199xxl-job\u7684\u914d\u7f6e\u6587\u4ef6\uff0c\u901a\u8fc7\u8bfb\u53d6\u914d\u7f6e\u6587\u4ef6\u4e2d\u7684\u76f8\u5173\u53c2\u6570\uff0c\u521b\u5efa\u5e76\u521d\u59cb\u5316\u4e00\u4e2a XxlJobSpringExecutor \u5b9e\u4f8b\r\n```\r\n/**\r\n * xxl job\u914d\u7f6e\r\n * @author \u6728\u6c60\r\n */\r\n@Component\r\n@Slf4j\r\n@ConditionalOnProperty(prefix = 'xxl', name = 'enable', havingValue = 'true', matchIfMissing = true)\r\npublic class XxlJobConfig {\r\n\r\n    @Value('${xxl.job.admin.addresses}')\r\n    private String adminAddresses;\r\n\r\n    @Value('${xxl.job.executor.app-name}')\r\n    private String appName;\r\n\r\n    @Value('${xxl.job.executor.log-retention-days}')\r\n    private Integer logRetentionDay;\r\n\r\n    @Value('${xxl.job.executor.access-token}')\r\n    private String accessToken;\r\n\r\n    @Value('${xxl.job.executor.log-path}')\r\n    private String logPath;\r\n\r\n    @Bean\r\n    public XxlJobSpringExecutor xxlJobExecutor() {\r\n        log.info('>>>>>>>>>>> xxl-job config init.');\r\n        XxlJobSpringExecutor xxlJobSpringExecutor = new XxlJobSpringExecutor();\r\n        xxlJobSpringExecutor.setAdminAddresses(adminAddresses);\r\n        xxlJobSpringExecutor.setAppname(appName);\r\n        xxlJobSpringExecutor.setAccessToken(accessToken);\r\n        xxlJobSpringExecutor.setLogPath(logPath);\r\n        xxlJobSpringExecutor.setLogRetentionDays(logRetentionDay);\r\n        return xxlJobSpringExecutor;\r\n    }\r\n}\r\n\r\n```\r\n**\u7b2c\u56db\u6b65**\r\n\u7f16\u5199xxl-job\u7684\u5b9a\u65f6\u4efb\u52a1\r\n```\r\n/**\r\n * @author \u6728\u6c60\r\n */\r\n@Component\r\n@AllArgsConstructor\r\npublic class XxlJobTask {\r\n    @XxlJob('cs')\r\n    public ReturnT<String> cs() {\r\n        LOGGER.info('\u6d4b\u8bd5');\r\n        return ReturnT.SUCCESS;\r\n    }\r\n}\r\n```\r\n**\u53e6\u63d0 - \u5982\u4f55\u83b7\u53d6xxl-job\u7684\u591a\u4e2a\u53c2\u6570**\r\n```\r\n  String param = XxlJobHelper.getJobParam();\r\n  String[] methodParams = param.split(',');\r\n```\u3002", "top": 0, "createdAt": 1719560793, "style": "", "script": "", "ogImage": "https://xlike.email/images/tx.jpg", "createdDate": "2024-06-28", "dateLabelColor": "#bc4c00"}, "P5": {"htmlDir": "docs/post/SpringBoot-ji-cheng-Midjourney-hui-hua.html", "labels": ["documentation"], "postTitle": "SpringBoot\u96c6\u6210Midjourney\u7ed8\u753b", "postUrl": "post/SpringBoot-ji-cheng-Midjourney-hui-hua.html", "postSourceUrl": "https://github.com/xliking/xliking.github.io/issues/5", "commentNum": 0, "wordCount": 17289, "description": "**\u6b65\u9aa4\u4e00**\r\n\r\n[\u6b64\u5904\u7533\u8bf7\u514d\u8d39\u7684KEY](https://app.prodia.com/api)\r\n\r\n\u5982 \uff1ab9b42bbb-e5a5-4e55-a71d-xxxxxxxxx\r\n\r\n**\u6b65\u9aa4\u4e8c**\r\n\r\n\u8fd9\u662f\u4ed6\u7684[API\u6587\u6863](https://docs.prodia.com/reference/generate)\r\n\r\n\u6211\u4eec\u7528\u7684\u662fjava\uff0c\u6240\u4ee5\u5c31\u5f97\u7528okhttp\u548c\u963f\u91cc\u7684fastjson\r\n\r\n**\u7b2c\u4e09\u6b65**\r\n\r\n\u5bfc\u5165Maven\u4f9d\u8d56\r\n\r\n```java\r\n<dependency>\r\n    <groupId>com.alibaba.fastjson2</groupId>\r\n    <artifactId>fastjson2</artifactId>\r\n    <version>2.0.40</version>\r\n</dependency>\r\n<dependency>\r\n    <groupId>com.squareup.okhttp3</groupId>\r\n    <artifactId>okhttp</artifactId>\r\n    <version>4.9.1</version>\r\n</dependency>\r\n\r\n```\r\n\r\n**\u7b2c\u56db\u6b65**\r\n\r\n\u7f16\u5199\u8bf7\u6c42\u5de5\u5177\u7c7b\r\n\r\n```java\r\n**\r\n * @author \u6728\u6c60\r\n */\r\npublic class Draw_StableDrawUtil {\r\n\r\n    private static final String API_KEY = '\u81ea\u5df1\u7533\u8bf7\u7684key';\r\n    private static final String HEAD_TYPE = 'Content-Type';\r\n    private static final String HEAD_ACCEPT = 'accept';\r\n    private static final String HEAD_VALUE = 'application/json';\r\n    private static final String HEADER_X_PRODIA_KEY = 'X-Prodia-Key';\r\n    private static final String MODELS_URL = 'https://api.prodia.com/v1/sdxl/generate';\r\n    private static final Integer TIMEOUT_MAX = 5;\r\n    private static final String BASE_URL = 'https://api.prodia.com/v1/job/%s';\r\n    private static final long POLL_INTERVAL_MS = 3000;\r\n\r\n\r\n    private static final OkHttpClient CLIENT = new OkHttpClient.Builder()\r\n            .callTimeout(TIMEOUT_MAX, TimeUnit.MINUTES)\r\n            .readTimeout(TIMEOUT_MAX, TimeUnit.MINUTES)\r\n            .build();\r\n    private static final Logger log = LoggerFactory.getLogger(Draw_StableDrawUtil.class);\r\n\r\n\r\n\r\n    public static String generateText(String content) throws IOException {\r\n        JSONObject object = JSONObject.parseObject(content);\r\n        String prompt = (String) object.get('prompt');\r\n        try {\r\n            prompt = TranslatorsUtils.textTrans(prompt);\r\n        } catch (Exception e) {\r\n            log.error(e.getMessage());\r\n        }\r\n        object.put('prompt', prompt);\r\n        String requestBodyJson = object.toJSONString();\r\n        MediaType mediaType = MediaType.parse(HEAD_VALUE);\r\n        Request request = new Request.Builder()\r\n                .url(MODELS_URL)\r\n                .post(RequestBody.create(mediaType, requestBodyJson))\r\n                .addHeader(HEAD_ACCEPT, HEAD_VALUE)\r\n                .addHeader(HEAD_TYPE, HEAD_VALUE)\r\n                .addHeader(HEADER_X_PRODIA_KEY, API_KEY)\r\n                .build();\r\n        try (Response response = CLIENT.newCall(request).execute()) {\r\n            if (response.isSuccessful() && response.body() != null) {\r\n                JSONObject jsonObject = JSONObject.parseObject(response.body().string());\r\n                String jobId = jsonObject.getString('job');\r\n                return getJobDetails(jobId);\r\n            }\r\n            throw new IOException('Request failed: ' + response.code() + ' ' + response.message());\r\n        } catch (InterruptedException e) {\r\n            return e.getMessage();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * \u83b7\u53d6\u4efb\u52a1\u8be6\u60c5\r\n     *\r\n     * @param jobId \u4efb\u52a1ID\r\n     * @return \u56fe\u7247\u5730\u5740\r\n     */\r\n    private static String getJobDetails(String jobId) throws IOException, InterruptedException {\r\n        // \u6784\u5efa\u8bf7\u6c42URL\r\n        String url = String.format(BASE_URL, jobId);\r\n        // \u6784\u5efa\u8bf7\u6c42\r\n        Request request = new Request.Builder()\r\n                .url(url)\r\n                .get()\r\n                .addHeader(HEAD_ACCEPT, HEAD_VALUE)\r\n                .addHeader(HEADER_X_PRODIA_KEY, API_KEY)\r\n                .build();\r\n        boolean isComplete = false;\r\n        String imageUrl = null;\r\n        // \u5f00\u59cb\u8f6e\u8be2\r\n        while (!isComplete) {\r\n            // \u6267\u884c\u8bf7\u6c42\u5e76\u5904\u7406\u54cd\u5e94\r\n            try (Response response = CLIENT.newCall(request).execute()) {\r\n                if (response.isSuccessful() && response.body() != null) {\r\n                    // \u8bfb\u53d6\u54cd\u5e94\u4f53\u5185\u5bb9\r\n                    String res = response.body().string();\r\n                    JSONObject jsonObject = JSONObject.parseObject(res);\r\n                    String status = jsonObject.getString('status');\r\n                    // \u68c0\u67e5\u4f5c\u4e1a\u72b6\u6001\r\n                    if ('succeeded'.equals(status)) {\r\n                        isComplete = true;\r\n                        imageUrl = jsonObject.getString('imageUrl');\r\n                    } else if ('failed'.equals(status)) {\r\n                        throw new IOException('Job failed: ' + jobId);\r\n                    }\r\n                } else {\r\n                    throw new IOException('Request failed: ' + response.code() + ' ' + response.message());\r\n                }\r\n            }\r\n            if (!isComplete) {\r\n                Thread.sleep(POLL_INTERVAL_MS);\r\n            }\r\n        }\r\n        return imageUrl;\r\n    }\r\n}\r\n```\r\n\r\n**\u7b2c\u4e94\u6b65**\r\n\r\n\u914d\u5408\u524d\u7aefvue\u4f7f\u7528\r\n\r\n\u524d\u7aef\u4ee3\u7801\u6211\u5c31\u76f4\u63a5\u7c98\u8d34\u4e86\uff0c\u5c31\u4e0d\u591a\u505a\u89e3\u91ca\u4e86\r\n\r\n```vue\r\n<template>\r\n  <div id='app'>\r\n    <div class='chat-container' style='height: 820px; max-width: 1350px'>\r\n      <div class='selection'>\r\n        <div class='container'>\r\n          <div class='settings2' @click='chat'><span style='color: #c05ee7'><b>\u5207\u6362AI\u5bf9\u8bdd</b></span></div>\r\n          <div class='settings2' @click='newChat'><span style='color: #2f8099'><b>\u65b0\u7248AI\u5bf9\u8bdd</b></span></div>\r\n        </div>\r\n        <div class='container'>\r\n          <div class='settings2' @click='Dalle3'><span style='color: #69a142'><b>\u5207\u6362D3\u7ed8\u753b</b></span></div>\r\n          <div class='settings2' @click='Midj'><span style='color: #c65930'><b>\u5207\u6362MJ\u7ed8\u753b</b></span></div>\r\n        </div>\r\n\r\n        <h3>\u6a21\u578b\u9009\u62e9</h3>\r\n        <el-select v-model='buildObject.model' placeholder='\u8bf7\u9009\u62e9\u6a21\u578b'>\r\n          <el-option\r\n              v-for='item in models'\r\n              :key='item.value'\r\n              :label='item.label'\r\n              :value='item.value'>\r\n          </el-option>\r\n        </el-select>\r\n\r\n        <h3>\u6837\u5f0f\u9884\u8bbe</h3>\r\n        <el-select v-model='buildObject.style_preset' placeholder='\u8bf7\u9009\u62e9\u9884\u8bbe'>\r\n          <el-option\r\n              v-for='item in presets'\r\n              :key='item.value'\r\n              :label='item.label'\r\n              :value='item.value'>\r\n            <span style='float: left'>{{ item.label }}</span>\r\n            <span style='float: right; color: #8492a6; font-size: 13px'>{{ item.value }}</span>\r\n          </el-option>\r\n        </el-select>\r\n\r\n        <div class='block'>\r\n          <h3>steps \u6b65\u9aa4</h3>\r\n          <el-slider v-model='buildObject.steps' style='width: 70%;margin-left: 15%'></el-slider>\r\n        </div>\r\n\r\n        <h3>\u91c7\u6837\u5668</h3>\r\n        <el-select v-model='buildObject.sampler' placeholder='\u8bf7\u9009\u62e9\u91c7\u6837\u5668'>\r\n          <el-option\r\n              v-for='item in samplers'\r\n              :key='item.value'\r\n              :label='item.label'\r\n              :value='item.value'>\r\n          </el-option>\r\n        </el-select>\r\n\r\n        <el-tooltip placement='top'>\r\n          <div slot='content'>\u4e3a\u83b7\u5f97\u6700\u4f73\u6027\u80fd\uff0c\u8bf7\u4f7f\u7528\u4ee5\u4e0b\u5206\u8fa8\u7387\u4e4b\u4e00<br/>1024x1024\u30011152x896\u30011216x832\u30011344x768\u30011536x640\u3001640x1536\u3001768x1344\u3001832x1216</div>\r\n          <h3>\u56fe\u50cf\u5bbd\u5ea6</h3>\r\n        </el-tooltip>\r\n        <el-select v-model='buildObject.width' placeholder='\u8bf7\u9009\u62e9\u56fe\u7247\u5bbd\u5ea6'>\r\n          <el-option\r\n              v-for='item in widths'\r\n              :key='item.value'\r\n              :label='item.label'\r\n              :value='item.value'>\r\n          </el-option>\r\n        </el-select>\r\n\r\n        <el-tooltip placement='top'>\r\n          <div slot='content'>\u4e3a\u83b7\u5f97\u6700\u4f73\u6027\u80fd\uff0c\u8bf7\u4f7f\u7528\u4ee5\u4e0b\u5206\u8fa8\u7387\u4e4b\u4e00<br/>1024x1024\u30011152x896\u30011216x832\u30011344x768\u30011536x640\u3001640x1536\u3001768x1344\u3001832x1216</div>\r\n          <h3>\u56fe\u50cf\u9ad8\u5ea6</h3>\r\n        </el-tooltip>\r\n        <el-select v-model='buildObject.height' placeholder='\u8bf7\u9009\u62e9\u56fe\u7247\u9ad8\u5ea6'>\r\n          <el-option\r\n              v-for='item in widths'\r\n              :key='item.value'\r\n              :label='item.label'\r\n              :value='item.value'>\r\n          </el-option>\r\n        </el-select>\r\n\r\n\r\n\r\n\r\n      </div>\r\n\r\n      <div class='chat-window'>\r\n        <div class='chat-header'>\r\n          StableDiffusion\u7ed8\u753b\r\n        </div>\r\n        <div class='chat-messages' id='chatMessages'>\r\n          <div v-for='message in messages' :key='message.id' class='message-row'\r\n               :class='{ 'user-row': message.is_user, 'system-row': !message.is_user }'>\r\n            <!-- \u7cfb\u7edf\u6d88\u606f\u5934\u50cf -->\r\n            <img v-if='!message.is_user' :src='system' class='avatar system-avatar' alt='System Avatar'>\r\n            <!-- \u6d88\u606f\u5185\u5bb9 -->\r\n            <div class='message' :class='{ 'user-message': message.is_user, 'system-message': !message.is_user }'>\r\n              <div v-if='message.loading' class='loading-box'>\r\n                <div class='loader'></div> <!-- \u7b80\u5355\u7684\u52a0\u8f7d\u52a8\u753b -->\r\n              </div>\r\n              <div v-else-if='Array.isArray(message.content)'>\r\n                <div v-for='(url, index) in message.content' :key='index' class='image-box'>\r\n<!--                  <el-image-->\r\n<!--                      style='width: 200px; height: 200px; margin: 5px;'-->\r\n<!--                      :src='url'-->\r\n<!--                      fit='cover'-->\r\n<!--                      @click='handleImageClick(url)'-->\r\n<!--                  ></el-image>-->\r\n                  <a :href='url' target='_blank'>{{ url }}</a>\r\n                </div>\r\n              </div>\r\n              <div v-else>\r\n                {{ message.content }}\r\n              </div>\r\n            </div>\r\n            <!-- \u7528\u6237\u6d88\u606f\u5934\u50cf -->\r\n            <img v-if='message.is_user' :src='user' class='avatar user-avatar' alt='User Avatar'>\r\n          </div>\r\n        </div>\r\n        <div class='chat-input'>\r\n          <input type='text' v-model='newMessage' @keydown.enter='sendMessage' placeholder='\u8bf7\u8f93\u5165\u60f3\u8981\u7ed8\u753b\u7684\u7269\u4f53'\r\n                 class='input-message'>\r\n          <button @click='sendMessage' class='send-button'>\u53d1\u9001</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <el-dialog :visible.sync='dialogVisible'>\r\n      <el-image :src='dialogImageUrl' style='width: 100%;'></el-image>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      system: require('@/assets/system.png'),\r\n      user: require('@/assets/user.png'),\r\n      newMessage: '',\r\n      messages: [],\r\n      nextMessageId: 1,\r\n      loading: false, // \u7528\u4e8e\u8ddf\u8e2a\u56fe\u7247\u52a0\u8f7d\u72b6\u6001\r\n      imageUrls: [], // \u7528\u4e8e\u5b58\u50a8\u4ece\u670d\u52a1\u5668\u54cd\u5e94\u83b7\u5f97\u7684\u56fe\u7247\u94fe\u63a5\r\n      dialogImageUrl: '', // \u5f53\u524d\u70b9\u51fb\u7684\u56fe\u7247\u7684URL\r\n      dialogVisible: false, // \u63a7\u5236\u6a21\u6001\u6846\u7684\u663e\u793a\r\n\r\n\r\n      models: [{\r\n        value: 'dreamshaperXL10_alpha2.safetensors [c8afe2ef]',\r\n        label: 'dreamshaperXL10_alpha2.safetensors [c8afe2ef]'\r\n      }, {\r\n        value: 'dynavisionXL_0411.safetensors [c39cc051]',\r\n        label: 'dynavisionXL_0411.safetensors [c39cc051]'\r\n      }, {\r\n        value: 'juggernautXL_v45.safetensors [e75f5471]',\r\n        label: 'juggernautXL_v45.safetensors [e75f5471]'\r\n      }, {\r\n        value: 'realismEngineSDXL_v10.safetensors [af771c3f]',\r\n        label: 'realismEngineSDXL_v10.safetensors [af771c3f]'\r\n      }, {\r\n        value: 'sd_xl_base_1.0.safetensors [be9edd61]',\r\n        label: 'sd_xl_base_1.0.safetensors [be9edd61]'\r\n      },],\r\n\r\n      presets: [ { value: '3d-model', label: '3D\u6a21\u578b' },\r\n        { value: 'analog-film', label: '\u80f6\u7247' },\r\n        { value: 'anime', label: '\u52a8\u6f2b' },\r\n        { value: 'cinematic', label: '\u7535\u5f71\u5316\u7684' },\r\n        { value: 'comic-book', label: '\u6f2b\u753b\u4e66' },\r\n        { value: 'digital-art', label: '\u6570\u5b57\u827a\u672f' },\r\n        { value: 'enhance', label: '\u589e\u5f3a' },\r\n        { value: 'fantasy-art', label: '\u5947\u5e7b\u827a\u672f' },\r\n        { value: 'isometric', label: '\u7b49\u8f74\u6d4b' },\r\n        { value: 'line-art', label: '\u7ebf\u63cf' },\r\n        { value: 'low-poly', label: '\u4f4e\u591a\u8fb9\u5f62' },\r\n        { value: 'neon-punk', label: '\u9713\u8679\u670b\u514b' },\r\n        { value: 'origami', label: '\u6298\u7eb8' },\r\n        { value: 'photographic', label: '\u6444\u5f71\u7684' },\r\n        { value: 'pixel-art', label: '\u50cf\u7d20\u827a\u672f' },\r\n        { value: 'texture', label: '\u7eb9\u7406' },\r\n        { value: 'craft-clay', label: '\u624b\u5de5\u9676\u571f' }],\r\n\r\n      samplers:[\r\n        { value: 'Euler', label: 'Euler' },\r\n        { value: 'Euler_a', label: 'Euler a' },\r\n        { value: 'LMS', label: 'LMS' },\r\n        { value: 'Heun', label: 'Heun' },\r\n        { value: 'DPM2', label: 'DPM2' },\r\n        { value: 'DPM2_a', label: 'DPM2 a' },\r\n        { value: 'DPM2S_a', label: 'DPM++ 2S a' },\r\n        { value: 'DPM2M', label: 'DPM++ 2M' },\r\n        { value: 'DPMSDE', label: 'DPM++ SDE' },\r\n        { value: 'DPM_fast', label: 'DPM fast' },\r\n        { value: 'DPM_adaptive', label: 'DPM adaptive' },\r\n        { value: 'LMS_Karras', label: 'LMS Karras' },\r\n        { value: 'DPM2_Karras', label: 'DPM2 Karras' },\r\n        { value: 'DPM2_a_Karras', label: 'DPM2 a Karras' },\r\n        { value: 'DPM2S_a_Karras', label: 'DPM++ 2S a Karras' },\r\n        { value: 'DPM2M_Karras', label: 'DPM++ 2M Karras' },\r\n        { value: 'DPMSDE_Karras', label: 'DPM++ SDE Karras' }\r\n      ],\r\n\r\n      widths:[\r\n        {label:'1024',value:'1024'},\r\n        {label:'1152',value:'1152'},\r\n        {label:'1216',value:'1216'},\r\n        {label:'1344',value:'1344'},\r\n        {label:'1536',value:'1536'},\r\n        {label:'640',value:'640'},\r\n        {label:'768',value:'768'},\r\n        {label:'832',value:'832'},\r\n      ],\r\n\r\n      heights:[\r\n        {label:'1024',value:'1024'},\r\n        {label:'896',value:'896'},\r\n        {label:'832',value:'832'},\r\n        {label:'768',value:'768'},\r\n        {label:'640',value:'640'},\r\n        {label:'1536',value:'1536'},\r\n        {label:'1344',value:'1344'},\r\n        {label:'1216',value:'1216'},\r\n      ],\r\n\r\n        buildObject: {\r\n          model: 'sd_xl_base_1.0.safetensors [be9edd61]',\r\n          prompt: '',\r\n          negative_prompt: 'badly drawn',\r\n          style_preset: 'analog-film',\r\n          steps: 25,\r\n          cfg_scale: 7,\r\n          seed: -1,\r\n          sampler: 'DPM++ 2M Karras',\r\n          width: 1024,\r\n          height: 1024\r\n        }\r\n\r\n    };\r\n  },\r\n  created() {\r\n    this.messages.push({\r\n      loading: false,\r\n      is_user: false,\r\n      id: this.nextMessageId++,\r\n      content: '\u8bf7\u63cf\u8ff0\u4f60\u60f3\u8981\u7684\u56fe\u7247\uff0c\u6015\u4f60\u4eec\u641e\u9ec4\uff0c\u8bf7\u81ea\u884c\u5728\u6d4f\u89c8\u5668\u6253\u5f00',\r\n    });\r\n    this.messages.push({\r\n      loading: false,\r\n      is_user: false,\r\n      id: this.nextMessageId++,\r\n      content: '\u6700\u597d\u66f4\u6539\u6240\u9700\u8981\u7684\u6837\u5f0f\u9884\u8bbe\u54e6\uff0c\u9ed8\u8ba4\u662f\u80f6\u7247\uff0c\u80f6\u7247\u56fe\u7247\u8d28\u91cf\u597d\uff0c\u4f46\u662f\u52a0\u8f7d\u6162\u3002", "top": 0, "createdAt": 1719562046, "style": "", "script": "", "ogImage": "https://xlike.email/images/tx.jpg", "createdDate": "2024-06-28", "dateLabelColor": "#bc4c00"}, "P6": {"htmlDir": "docs/post/ru-he-she-ji-yi-ge-miao-sha-xi-tong.html", "labels": ["documentation"], "postTitle": "\u5982\u4f55\u8bbe\u8ba1\u4e00\u4e2a\u79d2\u6740\u7cfb\u7edf", "postUrl": "post/ru-he-she-ji-yi-ge-miao-sha-xi-tong.html", "postSourceUrl": "https://github.com/xliking/xliking.github.io/issues/6", "commentNum": 0, "wordCount": 1113, "description": "\u79d2\u6740\u7cfb\u7edf\u7684\u4e1a\u52a1\u903b\u8f91\u975e\u5e38\u7b80\u5355\uff0c\u4e00\u822c\u5c31\u662f\u4e0b\u8ba2\u5355\u51cf\u5e93\u5b58\uff0c\u96be\u70b9\u5728\u4e8e\u6211\u4eec\u5982\u4f55\u4fdd\u969c\u79d2\u6740\u80fd\u591f\u987a\u5229\u8fdb\u884c\u3002", "top": 0, "createdAt": 1719564917, "style": "", "script": "", "ogImage": "https://xlike.email/images/tx.jpg", "createdDate": "2024-06-28", "dateLabelColor": "#bc4c00"}, "P7": {"htmlDir": "docs/post/ -ru-he-she-ji-yi-ge-zhan-nei-xiao-xi-xi-tong.html", "labels": ["documentation"], "postTitle": " \u5982\u4f55\u8bbe\u8ba1\u4e00\u4e2a\u7ad9\u5185\u6d88\u606f\u7cfb\u7edf", "postUrl": "post/%20-ru-he-she-ji-yi-ge-zhan-nei-xiao-xi-xi-tong.html", "postSourceUrl": "https://github.com/xliking/xliking.github.io/issues/7", "commentNum": 0, "wordCount": 6017, "description": "#### **\u7b80\u4ecb**\r\n\r\n\u5728\u67d0\u4e00\u4e2aAPP\u4e2d\uff0c\u5f53\u6709\u5176\u4ed6\u7528\u6237\u5173\u6ce8\u6211\u4eec\u6216\u8005\u79c1\u4fe1\u6211\u4eec\u7684\u884c\u4e3a\u65f6\uff0c\u6211\u4eec\u4f1a\u6536\u5230\u76f8\u5173\u7684\u6d88\u606f\u3002", "top": 0, "createdAt": 1719566440, "style": "", "script": "", "ogImage": "https://xlike.email/images/tx.jpg", "createdDate": "2024-06-28", "dateLabelColor": "#bc4c00"}, "P8": {"htmlDir": "docs/post/ru-he-shi-xian-da-wen-jian-kuai-su-shang-chuan.html", "labels": ["documentation"], "postTitle": "\u5982\u4f55\u5b9e\u73b0\u5927\u6587\u4ef6\u5feb\u901f\u4e0a\u4f20", "postUrl": "post/ru-he-shi-xian-da-wen-jian-kuai-su-shang-chuan.html", "postSourceUrl": "https://github.com/xliking/xliking.github.io/issues/8", "commentNum": 0, "wordCount": 958, "description": "#### \u5206\u7247\u4e0a\u4f20\r\n\r\n1. **\u65ad\u70b9\u7eed\u4f20** \uff1a\u4e0a\u4f20\u6587\u4ef6\u4e2d\u9014\u6682\u505c\u6216\u5931\u8d25\uff08\u6bd4\u5982\u9047\u5230\u7f51\u7edc\u95ee\u9898\uff09\u4e4b\u540e\uff0c\u4e0d\u9700\u8981\u91cd\u65b0\u4e0a\u4f20\uff0c\u53ea\u9700\u8981\u4e0a\u4f20\u90a3\u4e9b\u672a\u6210\u529f\u4e0a\u4f20\u7684\u6587\u4ef6\u5206\u7247\u5373\u53ef\u3002", "top": 0, "createdAt": 1719567614, "style": "", "script": "", "ogImage": "https://xlike.email/images/tx.jpg", "createdDate": "2024-06-28", "dateLabelColor": "#bc4c00"}, "P9": {"htmlDir": "docs/post/Redis-de-huan-cun-geng-xin-ce-lve.html", "labels": ["documentation"], "postTitle": "Redis\u7684\u7f13\u5b58\u66f4\u65b0\u7b56\u7565", "postUrl": "post/Redis-de-huan-cun-geng-xin-ce-lve.html", "postSourceUrl": "https://github.com/xliking/xliking.github.io/issues/9", "commentNum": 0, "wordCount": 1567, "description": "#### Cache Aside Pattern\uff08\u65c1\u8def\u7f13\u5b58\u6a21\u5f0f\uff09\r\n\r\n**Cache Aside Pattern \u662f\u6211\u4eec\u5e73\u65f6\u4f7f\u7528\u6bd4\u8f83\u591a\u7684\u4e00\u4e2a\u7f13\u5b58\u8bfb\u5199\u6a21\u5f0f\uff0c\u6bd4\u8f83\u9002\u5408\u8bfb\u8bf7\u6c42\u6bd4\u8f83\u591a\u7684\u573a\u666f\u3002", "top": 0, "createdAt": 1719568743, "style": "", "script": "", "ogImage": "https://xlike.email/images/tx.jpg", "createdDate": "2024-06-28", "dateLabelColor": "#bc4c00"}, "P10": {"htmlDir": "docs/post/SpringBoot-fen-xiang-yi-ge-jian-dan-de-ni-xiang.html", "labels": ["documentation"], "postTitle": "SpringBoot\u5206\u4eab\u4e00\u4e2a\u7b80\u5355\u7684\u9006\u5411", "postUrl": "post/SpringBoot-fen-xiang-yi-ge-jian-dan-de-ni-xiang.html", "postSourceUrl": "https://github.com/xliking/xliking.github.io/issues/10", "commentNum": 0, "wordCount": 2892, "description": "\u597d\u5904\u662f\uff0c\u53ef\u4ee5\u7ed5\u5f00\u524d\u7aef\u5df2\u7ecf\u5199\u6b7b\u7684\u53c2\u6570\u6216\u8005\u89c4\u5b9a\uff0c\u4ea4\u7ed9\u6211\u4eec\u81ea\u5df1\u53bb\u6309\u7167\u683c\u5f0f\u7ec4\u88c5\u53c2\u6570\uff0c\u8fbe\u5230\u6211\u4eec\u60f3\u8981\u7684\u76ee\u7684\r\n\r\n\u5bfc\u5165Maven\u4f9d\u8d56\uff0c\u79bb\u4e0d\u5f00okhttp\u548cjson\u5de5\u5177\u5305\r\n\r\n```JAVA\r\n<dependency>\r\n    <groupId>com.alibaba.fastjson2</groupId>\r\n    <artifactId>fastjson2</artifactId>\r\n    <version>2.0.40</version>\r\n</dependency>\r\n<dependency>\r\n    <groupId>com.squareup.okhttp3</groupId>\r\n    <artifactId>okhttp</artifactId>\r\n    <version>4.9.1</version>\r\n</dependency>\r\n```\r\n\r\n**\u7b2c\u4e00\u6b65**\r\n\r\n\u9996\u5148\u6253\u5f00\u4e00\u4e2a\u7f51\u7ad9\uff0c\u4ee5\u8fd9\u4e2a\u7f51\u7ad9 https://twoapi-ui.qiangtu.com/ \u4e3a\u4f8b\r\n\r\n\u70b9\u51fb\u5bf9\u8bdd\uff0c\u6765\u5230\u5bf9\u8bdd\u7a97\u53e3\uff0c\u53f3\u952e\u70b9\u51fb **\u68c0\u67e5**\uff0c\u6765\u5230**NetWork**\uff0c\u9009\u4e2d\uff0c**Fetch/xhr**\r\n\r\n\u6765\u5230\u5bf9\u8bdd\u6846\uff0c\u8f93\u5165\u6587\u672c\uff0c\u70b9\u51fb\u53d1\u9001\u6309\u94ae\uff0c\u6b64\u65f6\u4f1a\u591a\u4e00\u4e2a\u8bf7\u6c42\uff0c\u70b9\u51fb\u8fdb\u53bb\r\n\r\n![image-20240628183518233](https://github.com/xliking/xliking.github.io/assets/115143710/97f57003-196e-4e23-98b9-9e01beca2ec6)\r\n\r\n\r\n\u70b9\u51fbHeader\uff0c\u4f1a\u53d1\u73b0**URL**\u548c**Method** \uff0c\u5f80\u4e0b\u9762\u7ffb\uff0c\u4f1a\u6709\u4e00\u4e2a\u6700\u91cd\u8981\u7684**Request Header**\r\n\r\n\u627e\u5230 **Authorization**\uff0c\u8bb0\u4f4f **Bearer sk-1e49426A5A63Ee3C33256F17EF152C02**\r\n\r\n\u627e\u5230 **Content-Type**\uff0c\u8bb0\u4f4f **application/json**\uff0c\u8fd9\u4e24\u4e2a\u90fd\u5f88\u91cd\u8981\r\n\r\n**\u7b2c\u4e8c\u6b65**\r\n\r\n\u56e0\u4e3a\u662fpost\u8bf7\u6c42\uff0c\u4ed6\u7684\u53c2\u6570\u90fd\u5728**payload**\u4e2d\r\n\r\n\u6211\u4eec\u8fdb\u53bb\u4e4b\u540e\uff0c\u627e\u5230\u4ed6\u7684\u8bf7\u6c42\u4f53\r\n\r\n```json\r\n{\r\n  'messages': [\r\n    {\r\n      'role': 'system',\r\n      'content': '\u4f60\u662f\u5f3a\u5927\u7684\u667a\u8c31AI\uff0c\u5feb\u6765\u5e2e\u52a9\u89e3\u51b3\u6211\u7684\u95ee\u9898\u5427'\r\n    },\r\n    {\r\n      'role': 'user',\r\n      'content': '1'\r\n    }\r\n  ],\r\n  'stream': true,\r\n  'model': 'gpt-3.5-turbo-1106',\r\n  'temperature': 0.5,\r\n  'presence_penalty': 0,\r\n  'frequency_penalty': 0,\r\n  'top_p': 1\r\n}\r\n```\r\n\r\n\u7136\u540e\u5c31\u5230\u4e86java\u4ee3\u7801\u73af\u8282\r\n\r\n```java\r\n//\u6211\u4eec\u5c31\u8981\u5b9a\u4e49\u4ed6\u4eec\u7684\u8bf7\u6c42\u8def\u5f84\uff0c\u548c \u627e\u5230\u7684Authorization(\u5c31\u662fAPI_KEY)\r\nprivate static final Integer TIMEOUT_MAX = 5;\r\nprivate static final String API_URL = 'https://twoapi-ui.qiangtu.com/v1/chat/completions';\r\nprivate static final String API_KEY = 'sk-1e49426A5A63Ee3C33256F17EF152C02';\r\nprivate static final MediaType JSON_MEDIA_TYPE = MediaType.get('application/json; charset=utf-8');\r\n\r\nprivate static final OkHttpClient CLIENT = new OkHttpClient.Builder()\r\n        .callTimeout(TIMEOUT_MAX, TimeUnit.MINUTES)\r\n        .readTimeout(TIMEOUT_MAX, TimeUnit.MINUTES)\r\n        .build();\r\n```\r\n\r\n\u6784\u5efa\u8bf7\u6c42\u4f53\uff0c\u6211\u4e00\u822c\u90fd\u662f\u7528\u7684JSONObject\r\n\u6211\u8fd9\u4e2a\u53ea\u662f\u5b9e\u4f8b\u5e76\u4e0d\u5b8c\u6574\r\n\r\n```java\r\nJSONObject jsonBody = new JSONObject();\r\njsonBody.put('stream', false);\r\n  JSONArray messages = new JSONArray();\r\n        messages.add(new JSONObject().fluentPut('role', 'system').fluentPut('content', '[midjourney] \u6839\u636e\u8981\u6c42\u7ed8\u56fe'));\r\n        messages.add(new JSONObject().fluentPut('role', 'user').fluentPut('content', prompt));\r\n        jsonBody.put('messages', messages);\r\nRequestBody body = RequestBody.create(JSON_MEDIA_TYPE, jsonBody.toJSONString());\r\n```\r\n\r\n\u53d1\u9001\u8bf7\u6c42\r\n\r\n```java\r\nRequest request = new Request.Builder()\r\n        .url(API_URL)\r\n        .post(body)\r\n        .addHeader('Authorization', 'Bearer ' + API_KEY)\r\n        .addHeader('Content-Type', 'application/json')\r\n        .build();\r\n  try (Response response = CLIENT.newCall(request).execute()) {\r\n            if (!response.isSuccessful()) throw new IOException('Unexpected code ' + response);\r\n      // \u8bf7\u6c42\u7684\u7ed3\u679c\u5927\u591a\u6570\u90fd\u5728  response.body().string() \uff0c\u6781\u5c11\u6570 \u6d41\u5f0f\u8bf7\u6c42\u9700\u8981\u81ea\u5df1\u627e\r\n            System.out.println(response.body().string());\r\n        }\r\n```\u3002", "top": 0, "createdAt": 1719571875, "style": "", "script": "", "ogImage": "https://xlike.email/images/tx.jpg", "createdDate": "2024-06-28", "dateLabelColor": "#bc4c00"}, "P11": {"htmlDir": "docs/post/JRebel-wu-xian-shi-yong--JAVA-zhi-jie-yun-xing---xu-yao-JDK11-ji-yi-shang.html", "labels": ["documentation"], "postTitle": "JRebel\u65e0\u9650\u4f7f\u7528-JAVA\u76f4\u63a5\u8fd0\u884c-\u9700\u8981JDK11\u53ca\u4ee5\u4e0a", "postUrl": "post/JRebel-wu-xian-shi-yong--JAVA-zhi-jie-yun-xing---xu-yao-JDK11-ji-yi-shang.html", "postSourceUrl": "https://github.com/xliking/xliking.github.io/issues/11", "commentNum": 0, "wordCount": 5410, "description": "```\r\nimport javax.swing.*;\r\nimport java.awt.*;\r\nimport java.awt.event.ActionEvent;\r\nimport java.awt.event.ActionListener;\r\nimport java.io.File;\r\nimport java.io.FileOutputStream;\r\nimport java.net.URI;\r\nimport java.net.http.HttpClient;\r\nimport java.net.http.HttpRequest;\r\nimport java.net.http.HttpResponse;\r\nimport java.util.*;\r\n\r\npublic class JrebelMain {\r\n\r\n    private final static String url = 'https://headless.zeroturnaround.com/public/api/registrations/add-jrebel-evaluation.php';\r\n\r\n    public static void main(String[] args) {\r\n\r\n        JFrame jf = new JFrame('JrebelEvaluation');\r\n        jf.setSize(240, 320);\r\n        jf.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);\r\n        jf.setLocationRelativeTo(null);\r\n\r\n        // \u521b\u5efa\u5185\u5bb9\u9762\u677f\uff0c\u6307\u5b9a\u4f7f\u7528 \u6d41\u5f0f\u5e03\u5c40\r\n        JPanel panel = new JPanel(new FlowLayout(FlowLayout.CENTER, 100, 5));\r\n\r\n\r\n        JButton button = new JButton();\r\n        button.setText('Get License');\r\n        button.addActionListener(new JrebelMain.ButtonClick());\r\n        panel.add(button);\r\n\r\n\r\n        jf.setContentPane(panel);\r\n        jf.setVisible(true);        \r\n\r\n    }\r\n\r\n\r\n    public static int randNumber(int max, int min) {\r\n        return min + (int) (Math.random() * (max - min + 1));\r\n    }\r\n\r\n    public static String uuid() {\r\n        return UUID.randomUUID().toString().replaceAll('-', '');\r\n    }\r\n\r\n    public static String subText(String source, String startText, String endText, int offSet) {\r\n        int start = source.indexOf(startText, offSet) + 1;\r\n        if (start == -1) {\r\n            return null;\r\n        }\r\n        int end = source.indexOf(endText, start + offSet + startText.length() - 1);\r\n        if (end == -1) {\r\n            end = source.length();\r\n        }\r\n        return source.substring(start + startText.length() - 1, end);\r\n    }\r\n\r\n    static class ButtonClick implements ActionListener {\r\n\r\n\r\n        @Override\r\n        public void actionPerformed(ActionEvent e) {\r\n            try {\r\n                action();\r\n            } catch (Exception ex) {\r\n                ex.printStackTrace();\r\n            }\r\n        }\r\n    }\r\n\r\n    private static void action() throws Exception {\r\n        final File jrebelHome = new File(System.getProperty('user.home') + '/.jrebel');\r\n        final String[] jrebelFiless = new String[]{\r\n                'jrebel.prefs',\r\n                'jrebel.prefs.lock',\r\n                'jrebel.properties'\r\n        };\r\n\r\n        // \u5220\u9664 jrebel \u914d\u7f6e\u6587\u4ef6\r\n        Arrays.stream(jrebelFiless).map(it -> new File(jrebelHome.getAbsolutePath() + '/' + it)).filter(it -> it.exists()).forEach(it -> it.delete());\r\n\r\n\r\n        //write license jrebel.lic\r\n        StringBuffer phone = new StringBuffer();\r\n        for (int i = 0; i < randNumber(6, 11); i++) {\r\n            phone.append(randNumber(0, 9));\r\n        }\r\n        Map<String, Object> body = new HashMap<>() {{\r\n            put('referer_url', 'IDE');\r\n            put('email', uuid() + '%40qq.com');\r\n            put('first_name', uuid().substring(0, randNumber(3, 5)));\r\n            put('last_name', uuid().substring(0, randNumber(3, 6)));\r\n            put('phone', phone.toString());\r\n            put('organization', uuid().substring(0, randNumber(1, 5)));\r\n            put('output_format', 'json');\r\n            put('client_os', 'Windows+11');\r\n            put('guid', uuid());\r\n            put('jrebel-version', '2023.1.2');\r\n            put('ide', 'intellij');\r\n            put('ide-product', 'IU');\r\n            put('ide-version', '2022.3.3');\r\n            put('jvm.version', '17.0.' + randNumber(0, 20));\r\n            put('jvm.vendor', 'JetBrains+s.r.o');\r\n            put('os.name', 'Windows+11');\r\n        }};\r\n\r\n        String queryText = String.join('&', body.entrySet().stream().map(it -> it.getKey() + '=' + it.getValue()).toArray(String[]::new));\r\n        final URI uri = URI.create(url + '?' + queryText);\r\n        final HttpClient httpClient = HttpClient.newBuilder()\r\n                .build();\r\n        final HttpRequest request = HttpRequest.newBuilder()\r\n                .version(HttpClient.Version.HTTP_1_1)\r\n                .GET()\r\n                .uri(uri)\r\n                .build();\r\n        String ret = httpClient.send(request, HttpResponse.BodyHandlers.ofString()).body();\r\n        String content = subText(ret, 'content\\':\\'', '\\'', 0);\r\n        System.out.println(content);\r\n        byte[] bin = Base64.getMimeDecoder().decode(content);\r\n        File jrebelLicFile = new File(jrebelHome.getAbsolutePath() + '/jrebel.lic');\r\n        FileOutputStream jrebelLicOutputStream = new FileOutputStream(jrebelLicFile);\r\n        jrebelLicOutputStream.write(bin);\r\n        jrebelLicOutputStream.flush();\r\n        jrebelLicOutputStream.close();\r\n\r\n\r\n        //write jrebel.properties\r\n        FileOutputStream jrebelPropertiesOutputStream = new FileOutputStream(jrebelHome.getAbsolutePath() + '/jrebel.properties');\r\n        jrebelPropertiesOutputStream.write(('rebel.license=' + jrebelLicFile.getAbsolutePath() + '\\r\\n').getBytes());\r\n        jrebelPropertiesOutputStream.write(('rebel.preferred.license=0\\r\\n').getBytes());\r\n        jrebelPropertiesOutputStream.write(('rebel.properties.version=2\\r\\n').getBytes());\r\n        jrebelPropertiesOutputStream.flush();\r\n        jrebelPropertiesOutputStream.close();\r\n\r\n\r\n        JOptionPane.showMessageDialog(null, 'please restart idea ,  license :  \\n' + jrebelLicFile.getAbsolutePath());\r\n\r\n    }\r\n\r\n\r\n}\r\n```\u3002", "top": 0, "createdAt": 1719572237, "style": "", "script": "", "ogImage": "https://xlike.email/images/tx.jpg", "createdDate": "2024-06-28", "dateLabelColor": "#bc4c00"}, "P12": {"htmlDir": "docs/post/fu-wu-qi-bu-shu-SpringBoot+Vue-xiang-mu-\uff0c-bing-shi-xian-https-fang-wen.html", "labels": ["documentation", "NotComplete"], "postTitle": "\u670d\u52a1\u5668\u90e8\u7f72SpringBoot+Vue\u9879\u76ee\uff0c\u5e76\u5b9e\u73b0https\u8bbf\u95ee", "postUrl": "post/fu-wu-qi-bu-shu-SpringBoot%2BVue-xiang-mu-%EF%BC%8C-bing-shi-xian-https-fang-wen.html", "postSourceUrl": "https://github.com/xliking/xliking.github.io/issues/12", "commentNum": 0, "wordCount": 443, "description": "**\u9996\u5148\u6211\u4eec\u9700\u8981\u4e00\u53f0\u670d\u52a1\u5668\uff0c\u81ea\u5df1\u4e70\u4e00\u4e2a\u5c31\u884c\uff0c\u4f46\u5fc5\u987b\u8981\u5907\u6848\uff0c\u4e00\u4e2a\u57df\u540d**\r\n\u6240\u4ee5\u63a8\u8350\u4e00\u4e2a [\u56fd\u5916\u514d\u5907\u6848\uff0c\u53ef\u4ee5\u652f\u4ed8\u5b9d\u652f\u4ed8](https://my.racknerd.com/)\r\n\u4e70\u5b8c\u4e4b\u540e\uff0c\u5b89\u88c5\u4e00\u4e2a[\u5b9d\u5854\u9762\u677f](https://www.bt.cn/)\uff0c\u5b98\u7f51\u652f\u6301\u8fdc\u7a0b\u5b89\u88c5\r\nCentos\u5b89\u88c5\u811a\u672c\r\n```\r\nyum install -y wget && wget -O install.sh https://download.bt.cn/install/install_6.0.sh && sh install.sh ed8484bec\r\n```\r\nUbuntu/Deepin\u5b89\u88c5\u811a\u672c\r\n```\r\nwget -O install.sh https://download.bt.cn/install/install-ubuntu_6.0.sh && sudo bash install.sh ed8484bec\r\n```\r\n**\u7b2c\u4e00\u6b65\uff0c\u6211\u4eec\u5728\u5b9d\u5854\u9762\u677f\u5b89\u88c5Nginx**\r\n\r\n\r\n\r\n\r\n\r\n\r\n\u3002", "top": 0, "createdAt": 1719573309, "style": "", "script": "", "ogImage": "https://xlike.email/images/tx.jpg", "createdDate": "2024-06-28", "dateLabelColor": "#bc4c00"}, "P13": {"htmlDir": "docs/post/SQL-diao-you.html", "labels": ["documentation"], "postTitle": "SQL\u8c03\u4f18", "postUrl": "post/SQL-diao-you.html", "postSourceUrl": "https://github.com/xliking/xliking.github.io/issues/13", "commentNum": 0, "wordCount": 3666, "description": "#### \u907f\u514d\u4f7f\u7528 SELECT * \r\n\r\n- SELECT * \u4f1a\u6d88\u8017\u66f4\u591a\u7684 CPU\r\n\r\n- SELECT * \u65e0\u7528\u5b57\u6bb5\u589e\u52a0\u7f51\u7edc\u5e26\u5bbd\u8d44\u6e90\u6d88\u8017\uff0c\u589e\u52a0\u6570\u636e\u4f20\u8f93\u65f6\u95f4\uff0c\u5c24\u5176\u662f\u5927\u5b57\u6bb5\uff08\u5982 varchar\u3001blob\u3001text\uff09\r\n\r\n- SELECT * \u65e0\u6cd5\u4f7f\u7528 MySQL \u4f18\u5316\u5668\u8986\u76d6\u7d22\u5f15\u7684\u4f18\u5316\r\n\r\n- SELECT <\u5b57\u6bb5\u5217\u8868> \u53ef\u51cf\u5c11\u8868\u7ed3\u6784\u53d8\u66f4\u5e26\u6765\u7684\u5f71\u54cd\r\n#### \u5206\u9875\u4f18\u5316 \r\n\r\n\u666e\u901a\u7684\u5206\u9875\u5728\u6570\u636e\u91cf\u5c0f\u7684\u65f6\u5019\u8017\u8d39\u65f6\u95f4\u8fd8\u662f\u6bd4\u8f83\u77ed\u7684\u3002", "top": 0, "createdAt": 1719738240, "style": "", "script": "", "ogImage": "https://xlike.email/images/tx.jpg", "createdDate": "2024-06-30", "dateLabelColor": "#bc4c00"}, "P14": {"htmlDir": "docs/post/Java-bing-fa.html", "labels": ["documentation"], "postTitle": "Java\u5e76\u53d1", "postUrl": "post/Java-bing-fa.html", "postSourceUrl": "https://github.com/xliking/xliking.github.io/issues/14", "commentNum": 0, "wordCount": 3646, "description": "#### \u57fa\u7840\u6982\u5ff5\r\n\r\n**\u540c\u6b65\u548c\u5f02\u6b65**\r\n\u540c\u6b65\u548c\u5f02\u6b65\u901a\u5e38\u7528\u6765\u5f62\u5bb9\u4e00\u6b21\u65b9\u6cd5\u8c03\u7528\u3002", "top": 0, "createdAt": 1719739928, "style": "", "script": "", "ogImage": "https://xlike.email/images/tx.jpg", "createdDate": "2024-06-30", "dateLabelColor": "#bc4c00"}}, "singeListJson": {}, "labelColorDict": {"bug": "#d73a4a", "documentation": "#0075ca", "duplicate": "#cfd3d7", "enhancement": "#a2eeef", "good first issue": "#7057ff", "help wanted": "#008672", "invalid": "#e4e669", "NotComplete": "#C91CEA", "question": "#d876e3", "wontfix": "#ffffff"}, "displayTitle": "\u6728\u6c60", "faviconUrl": "https://xlike.email/images/tx.jpg", "ogImage": "https://xlike.email/images/tx.jpg", "homeUrl": "https://xliking.github.io", "prevUrl": "disabled", "nextUrl": "disabled"}